////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef SETTINGS_HPP
#define SETTINGS_HPP

////////////////////////////////////////////////////////////////////////////////
#include <QFile>
#include <QString>

#include <map>

////////////////////////////////////////////////////////////////////////////////
struct uri
{
    QString host;
    int port = 0;

    bool is_valid() const { return host.size() && port > 0; }

    bool operator==(const uri& rhs) const { return host == rhs.host && port == rhs.port; }
};

////////////////////////////////////////////////////////////////////////////////
using type = QString;

struct profile
{
    QString mode;
    QString autoconfig_url;
    QString ignore_hosts;
    std::map<type, uri> types;

    bool operator==(const profile&) const;
};

////////////////////////////////////////////////////////////////////////////////
using Name = QString;
using Settings = std::map<Name, profile>;

Settings read_from(QFile&);

////////////////////////////////////////////////////////////////////////////////
#endif
